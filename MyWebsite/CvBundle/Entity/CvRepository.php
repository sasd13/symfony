<?php

namespace MyWebsite\CvBundle\Entity;

use Doctrine\ORM\EntityRepository;
use MyWebsite\CvBundle\Services\Data;

/**
 * CvRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CvRepository extends EntityRepository
{
	public function myFindWithCategories($idCv)
	{
		$qb = $this->createQueryBuilder('cv')
			->where('cv.id = :id')
			->setParameter('id', $idCv)
			->leftJoin('cv.categories', 'category')
			->addSelect('category')
			->leftJoin('category.contents', 'content')
			->addSelect('content')
		;
		
		$results = $qb->getQuery()->getResult();
		if($results == null)
		{
			return null;
		}
		
		return $results[0];
	}
	
	public function myFindWithCategoryInfo($idCv)
	{
		$qb = $this->createQueryBuilder('cv')
			->where('cv.id = :id')
			->setParameter('id', $idCv)
			->leftJoin('cv.categories', 'category', 'WITH', 'category.tag = :tag')
			->setParameter('tag', Data::CV_CATEGORY_TAG_INFO)
			->addSelect('category')
			->leftJoin('category.contents', 'content')
			->addSelect('content')
		;
		
		$results = $qb->getQuery()->getResult();
		if($results == null)
		{
			return null;
		}
		
		return $results[0];
	}
	
	public function myFindByCategoryTitle($idCv, $titleCategory)
	{
		$qb = $this->createQueryBuilder('cv')
			->where('cv.id = :id')
			->setParameter('id', $idCv)
			->leftJoin('cv.categories', 'category')
			->addSelect('category')
			->andWhere('category.title = :title')
			->setParameter('title', $titleCategory)
		;
		
		$results = $qb->getQuery()->getResult();
		if($results == null)
		{
			return null;
		}
		//die(var_dump($results[0]));
		return $results[0];
	}
}
